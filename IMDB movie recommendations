import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
df = pd.read_csv('movies.csv') 
df = df[['title', 'overview']].dropna().drop_duplicates()
df.reset_index(drop=True, inplace=True)
df['overview'] = df['overview'].str.lower()
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['overview'])
cosine_sim = cosine_similarity(tfidf_matrix)
def recommend_movies(title, top_n=5):
    indices = pd.Series(df.index, index=df['title'].str.lower())
    idx = indices.get(title.lower())

    if idx is None:
        return "Movie not found. Please check the spelling."

    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)[1:top_n+1]

    movie_indices = [i[0] for i in sim_scores]

    return df['title'].iloc[movie_indices].tolist()
movie_title = input("Enter a movie title: ")
recommendations = recommend_movies(movie_title)
print("\nRecommended Movies:")
if isinstance(recommendations, list):
    for i, rec in enumerate(recommendations, 1):
        print(f"{i}. {rec}")
else:
    print(recommendations)
